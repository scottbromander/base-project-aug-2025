name: base-project

services:
  db:
    image: postgres:16-alpine
    environment:
      # Superuser for container init
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgrespass}
    ports:
      - "55432:5432" # host:container
    volumes:
      - pgdata:/var/lib/postgresql/data
      # First-boot initializer (safe + optional; see db/init.sql)
      - ./db/init.sql:/docker-entrypoint-initdb.d/00_init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 3s
      timeout: 3s
      retries: 20

  # Idempotent safety net: creates role/db if they don't exist (covers old volumes)
  ensure-db:
    image: postgres:16-alpine
    depends_on:
      db:
        condition: service_healthy
    environment:
      # must match db.POSTGRES_PASSWORD (or its default)
      PGPASSWORD: ${POSTGRES_PASSWORD:-postgrespass}
    entrypoint: ["/bin/sh", "-lc"]
    command: |
      set -e
      # extra safety: wait until psql works
      until pg_isready -h db -U postgres -d postgres >/dev/null 2>&1; do sleep 1; done

      # create role if missing
      psql -h db -U postgres -d postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='appuser'" | grep -q 1 \
        || psql -h db -U postgres -d postgres -c "CREATE ROLE appuser WITH LOGIN PASSWORD 'apppass';"

      # create database if missing
      psql -h db -U postgres -d postgres -tAc "SELECT 1 FROM pg_database WHERE datname='appdb'" | grep -q 1 \
        || psql -h db -U postgres -d postgres -c "CREATE DATABASE appdb OWNER appuser;"

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    environment:
      DATABASE_URL: postgresql+psycopg://appuser:apppass@db:5432/appdb
      CORS_ORIGINS: http://localhost:5173
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      ensure-db:
        condition: service_completed_successfully

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev # ensure your Dockerfile has a "dev" stage
    environment:
      VITE_API_URL: http://localhost:8000
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - "5173:5173"
    depends_on:
      - api

volumes:
  pgdata:
